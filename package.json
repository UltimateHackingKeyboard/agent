{
  "name": "uhk-agent",
  "private": true,
  "author": "Ultimate Gadget Laboratories",
  "main": "electron/dist/electron-main.js",
  "version": "1.2.2",
  "firmwareVersion": "8.3.0",
  "deviceProtocolVersion": "4.3.1",
  "userConfigVersion": "4.1.0",
  "hardwareConfigVersion": "1.0.0",
  "description": "Agent is the configuration application of the Ultimate Hacking Keyboard.",
  "repository": {
    "type": "git",
    "url": "git@github.com:UltimateHackingKeyboard/agent.git"
  },
  "license": "GPL-3.0",
  "engines": {
    "node": ">=8.9.1 <9.0.0",
    "npm": ">=5.6.0 <6.0.0"
  },
  "devDependencies": {
    "@types/electron-devtools-installer": "2.0.2",
    "@types/electron-settings": "3.0.0",
    "@types/fs-extra": "5.0.1",
    "@types/jasmine": "2.6.0",
    "@types/jquery": "3.3.1",
    "@types/jsonfile": "4.0.1",
    "@types/node": "8.0.53",
    "@types/node-hid": "0.5.2",
    "@types/request": "2.0.8",
    "@types/usb": "1.1.3",
    "autoprefixer": "6.5.3",
    "buffer": "5.0.6",
    "check-node-version": "^3.2.0",
    "copy-webpack-plugin": "4.0.1",
    "copyfiles": "^2.0.0",
    "core-js": "2.4.1",
    "cross-env": "5.0.5",
    "decompress": "4.2.0",
    "decompress-tarbz2": "^4.1.1",
    "devtron": "1.4.0",
    "electron": "1.8.4",
    "electron-builder": "20.8.1",
    "electron-debug": "1.5.0",
    "electron-devtools-installer": "2.2.3",
    "electron-log": "2.2.14",
    "electron-rebuild": "1.7.3",
    "electron-settings": "3.1.4",
    "electron-updater": "2.21.4",
    "exports-loader": "0.6.3",
    "file-loader": "0.10.0",
    "fs-extra": "5.0.0",
    "gh-pages": "1.1.0",
    "jsonfile": "4.0.0",
    "lerna": "2.9.0",
    "mkdirp": "0.5.1",
    "node-hid": "0.5.7",
    "npm-run-all": "4.0.2",
    "pre-commit": "1.2.2",
    "request": "2.83.0",
    "rimraf": "2.6.1",
    "standard-version": "4.2.0",
    "stylelint": "7.13.0",
    "svg-sprite": "1.3.7",
    "ts-loader": "2.3.1",
    "ts-node": "3.0.4",
    "tslint": "5.9.1",
    "typescript": "2.6.2",
    "webpack": "3.10.0"
  },
  "pre-commit": [
    "precommit-msg"
  ],
  "scripts": {
    "postinstall": "lerna bootstrap",
    "precommit-msg": "Git precommit hook is running... & exit 0",
    "test": "run-p -sn test:test-serializer test:uhk-common",
    "test:test-serializer": "lerna exec --scope test-serializer npm test",
    "test:uhk-common": "lerna exec --scope uhk-common npm test",
    "test:uhk-web": "lerna exec --scope uhk-web npm test",
    "lint": "run-s -scn lint:ts lint:style",
    "lint:ts": "run-p -sn lint:ts:electron-main lint:ts:electron-renderer lint:ts:web lint:ts:test-serializer lint:ts:uhk-usb",
    "lint:ts:electron-main": "tslint --project ./packages/uhk-agent/tsconfig.json",
    "lint:ts:electron-renderer": "tslint --project ./packages/uhk-web/src/tsconfig.renderer.json",
    "lint:ts:web": "tslint --project ./packages/uhk-web/src/tsconfig.app.json",
    "lint:ts:test-serializer": "tslint --project ./packages/test-serializer/tsconfig.json",
    "lint:ts:uhk-usb": "tslint --project ./packages/uhk-usb/tsconfig.json",
    "lint:style": "stylelint \"packages/uhk-agent/src/**/*.scss\" \"packages/uhk-web/src/**/*.scss\" --syntax scss",
    "prebuild": "check-node-version --package",
    "build": "run-s build:common build:usb build:web build:electron",
    "build:web": "lerna exec --scope uhk-web npm run build",
    "build:electron": "cross-env AOT_BUILD=true run-s -sn build:electron:renderer build:electron:main",
    "build:electron:main": "lerna exec --scope uhk-agent npm run build",
    "build:electron:renderer": "lerna exec --scope uhk-web npm run build:renderer",
    "build:common": "lerna exec --scope uhk-common npm run build",
    "build:usb": "lerna exec --scope uhk-usb npm run build",
    "server:web": "lerna exec --scope uhk-web npm start",
    "server:electron": "lerna exec --scope uhk-web npm run server:renderer",
    "electron": "lerna exec --scope uhk-agent npm start",
    "electron:spe": "lerna exec --scope uhk-agent npm run electron:spe",
    "standard-version": "standard-version",
    "pack": "node ./scripts/release.js",
    "sprites": "node ./scripts/generate-svg-sprites",
    "release": "node ./scripts/release.js",
    "clean": "lerna exec rimraf ./node_modules ./dist && rimraf ./node_modules ./dist",
    "predeploy-gh-pages": "run-s build:web",
    "deploy-gh-pages": "gh-pages -d packages/uhk-web/dist"
  },
  "dependencies": {}
}
